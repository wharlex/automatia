version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: automatia_postgres
    environment:
      POSTGRES_DB: automatia_chatbot
      POSTGRES_USER: automatia
      POSTGRES_PASSWORD: automatia123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U automatia -d automatia_chatbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for message queues
  redis:
    image: redis:7-alpine
    container_name: automatia_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: automatia_app
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://automatia:automatia123@postgres:5432/automatia_chatbot
      - REDIS_URL=redis://redis:6379
      - ENCRYPTION_KEY=dGVzdC1lbmNyeXB0aW9uLWtleS1mb3ItZGV2ZWxvcG1lbnQtcHVycG9zZXMtb25seQ==
      - WHATSAPP_VERIFY_TOKEN=automatia_verify_token_2024
      - WHATSAPP_APP_SECRET=dev_app_secret
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEXT_PUBLIC_WS_URL=http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # Redis Commander (optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: automatia_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - tools

  # pgAdmin (optional - for PostgreSQL management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: automatia_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@automatia.store
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: automatia_network




